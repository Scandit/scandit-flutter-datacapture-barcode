def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
    ext {
        kotlin_version = "1.7.21"
        agp_version = "7.2.1"
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    def sdk_version = "6.20.1"

    println("Version of the native sdk used in this build: ${safeExtGet('global_sdk_version', sdk_version)}")
    if (findProject(':scandit-datacapture-frameworks-barcode') != null) {
        api project(":scandit-datacapture-frameworks-barcode")
    } else {
        api "com.scandit.datacapture.frameworks:barcode:${safeExtGet('global_sdk_version', sdk_version)}"
    }

    api project(path: ':scandit_flutter_datacapture_core')
}
